/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as GuestLayoutRouteImport } from './routes/_guestLayout'
import { Route as AuthenticatedLayoutRouteImport } from './routes/_authenticatedLayout'
import { Route as GuestLayoutIndexRouteImport } from './routes/_guestLayout/index'
import { Route as GuestLayoutSignUpRouteImport } from './routes/_guestLayout/sign-up'
import { Route as GuestLayoutSignInRouteImport } from './routes/_guestLayout/sign-in'
import { Route as AuthenticatedLayoutHomeworkHelperRouteImport } from './routes/_authenticatedLayout/homework-helper'
import { Route as AuthenticatedLayoutDashboardRouteImport } from './routes/_authenticatedLayout/dashboard'
import { ServerRoute as ApiClerkServerRouteImport } from './routes/api/clerk'

const rootServerRouteImport = createServerRootRoute()

const GuestLayoutRoute = GuestLayoutRouteImport.update({
  id: '/_guestLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedLayoutRoute = AuthenticatedLayoutRouteImport.update({
  id: '/_authenticatedLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const GuestLayoutIndexRoute = GuestLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => GuestLayoutRoute,
} as any)
const GuestLayoutSignUpRoute = GuestLayoutSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => GuestLayoutRoute,
} as any)
const GuestLayoutSignInRoute = GuestLayoutSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => GuestLayoutRoute,
} as any)
const AuthenticatedLayoutHomeworkHelperRoute =
  AuthenticatedLayoutHomeworkHelperRouteImport.update({
    id: '/homework-helper',
    path: '/homework-helper',
    getParentRoute: () => AuthenticatedLayoutRoute,
  } as any)
const AuthenticatedLayoutDashboardRoute =
  AuthenticatedLayoutDashboardRouteImport.update({
    id: '/dashboard',
    path: '/dashboard',
    getParentRoute: () => AuthenticatedLayoutRoute,
  } as any)
const ApiClerkServerRoute = ApiClerkServerRouteImport.update({
  id: '/api/clerk',
  path: '/api/clerk',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/dashboard': typeof AuthenticatedLayoutDashboardRoute
  '/homework-helper': typeof AuthenticatedLayoutHomeworkHelperRoute
  '/sign-in': typeof GuestLayoutSignInRoute
  '/sign-up': typeof GuestLayoutSignUpRoute
  '/': typeof GuestLayoutIndexRoute
}
export interface FileRoutesByTo {
  '/dashboard': typeof AuthenticatedLayoutDashboardRoute
  '/homework-helper': typeof AuthenticatedLayoutHomeworkHelperRoute
  '/sign-in': typeof GuestLayoutSignInRoute
  '/sign-up': typeof GuestLayoutSignUpRoute
  '/': typeof GuestLayoutIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticatedLayout': typeof AuthenticatedLayoutRouteWithChildren
  '/_guestLayout': typeof GuestLayoutRouteWithChildren
  '/_authenticatedLayout/dashboard': typeof AuthenticatedLayoutDashboardRoute
  '/_authenticatedLayout/homework-helper': typeof AuthenticatedLayoutHomeworkHelperRoute
  '/_guestLayout/sign-in': typeof GuestLayoutSignInRoute
  '/_guestLayout/sign-up': typeof GuestLayoutSignUpRoute
  '/_guestLayout/': typeof GuestLayoutIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/dashboard' | '/homework-helper' | '/sign-in' | '/sign-up' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/dashboard' | '/homework-helper' | '/sign-in' | '/sign-up' | '/'
  id:
    | '__root__'
    | '/_authenticatedLayout'
    | '/_guestLayout'
    | '/_authenticatedLayout/dashboard'
    | '/_authenticatedLayout/homework-helper'
    | '/_guestLayout/sign-in'
    | '/_guestLayout/sign-up'
    | '/_guestLayout/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedLayoutRoute: typeof AuthenticatedLayoutRouteWithChildren
  GuestLayoutRoute: typeof GuestLayoutRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/api/clerk': typeof ApiClerkServerRoute
}
export interface FileServerRoutesByTo {
  '/api/clerk': typeof ApiClerkServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/clerk': typeof ApiClerkServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/clerk'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/clerk'
  id: '__root__' | '/api/clerk'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiClerkServerRoute: typeof ApiClerkServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_guestLayout': {
      id: '/_guestLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticatedLayout': {
      id: '/_authenticatedLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_guestLayout/': {
      id: '/_guestLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof GuestLayoutIndexRouteImport
      parentRoute: typeof GuestLayoutRoute
    }
    '/_guestLayout/sign-up': {
      id: '/_guestLayout/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof GuestLayoutSignUpRouteImport
      parentRoute: typeof GuestLayoutRoute
    }
    '/_guestLayout/sign-in': {
      id: '/_guestLayout/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof GuestLayoutSignInRouteImport
      parentRoute: typeof GuestLayoutRoute
    }
    '/_authenticatedLayout/homework-helper': {
      id: '/_authenticatedLayout/homework-helper'
      path: '/homework-helper'
      fullPath: '/homework-helper'
      preLoaderRoute: typeof AuthenticatedLayoutHomeworkHelperRouteImport
      parentRoute: typeof AuthenticatedLayoutRoute
    }
    '/_authenticatedLayout/dashboard': {
      id: '/_authenticatedLayout/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedLayoutDashboardRouteImport
      parentRoute: typeof AuthenticatedLayoutRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/clerk': {
      id: '/api/clerk'
      path: '/api/clerk'
      fullPath: '/api/clerk'
      preLoaderRoute: typeof ApiClerkServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface AuthenticatedLayoutRouteChildren {
  AuthenticatedLayoutDashboardRoute: typeof AuthenticatedLayoutDashboardRoute
  AuthenticatedLayoutHomeworkHelperRoute: typeof AuthenticatedLayoutHomeworkHelperRoute
}

const AuthenticatedLayoutRouteChildren: AuthenticatedLayoutRouteChildren = {
  AuthenticatedLayoutDashboardRoute: AuthenticatedLayoutDashboardRoute,
  AuthenticatedLayoutHomeworkHelperRoute:
    AuthenticatedLayoutHomeworkHelperRoute,
}

const AuthenticatedLayoutRouteWithChildren =
  AuthenticatedLayoutRoute._addFileChildren(AuthenticatedLayoutRouteChildren)

interface GuestLayoutRouteChildren {
  GuestLayoutSignInRoute: typeof GuestLayoutSignInRoute
  GuestLayoutSignUpRoute: typeof GuestLayoutSignUpRoute
  GuestLayoutIndexRoute: typeof GuestLayoutIndexRoute
}

const GuestLayoutRouteChildren: GuestLayoutRouteChildren = {
  GuestLayoutSignInRoute: GuestLayoutSignInRoute,
  GuestLayoutSignUpRoute: GuestLayoutSignUpRoute,
  GuestLayoutIndexRoute: GuestLayoutIndexRoute,
}

const GuestLayoutRouteWithChildren = GuestLayoutRoute._addFileChildren(
  GuestLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedLayoutRoute: AuthenticatedLayoutRouteWithChildren,
  GuestLayoutRoute: GuestLayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiClerkServerRoute: ApiClerkServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
